{"remainingRequest":"C:\\Users\\Administrator\\Desktop\\qd\\blog\\vuepress-blog-demo\\xcui-blog\\node_modules\\babel-loader\\lib\\index.js??ref--3-1!C:\\Users\\Administrator\\Desktop\\qd\\blog\\vuepress-blog-demo\\xcui-blog\\node_modules\\core-js\\internals\\fix-regexp-well-known-symbol-logic.js","dependencies":[{"path":"C:\\Users\\Administrator\\Desktop\\qd\\blog\\vuepress-blog-demo\\xcui-blog\\node_modules\\core-js\\internals\\fix-regexp-well-known-symbol-logic.js","mtime":499162500000},{"path":"C:\\Users\\Administrator\\Desktop\\qd\\blog\\vuepress-blog-demo\\xcui-blog\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\Administrator\\Desktop\\qd\\blog\\vuepress-blog-demo\\xcui-blog\\node_modules\\babel-loader\\lib\\index.js","mtime":315532800000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:J3VzZSBzdHJpY3QnOyAvLyBUT0RPOiBSZW1vdmUgZnJvbSBgY29yZS1qc0A0YCBzaW5jZSBpdCdzIG1vdmVkIHRvIGVudHJ5IHBvaW50cwoKcmVxdWlyZSgnLi4vbW9kdWxlcy9lcy5yZWdleHAuZXhlYycpOwoKdmFyIHJlZGVmaW5lID0gcmVxdWlyZSgnLi4vaW50ZXJuYWxzL3JlZGVmaW5lJyk7Cgp2YXIgZmFpbHMgPSByZXF1aXJlKCcuLi9pbnRlcm5hbHMvZmFpbHMnKTsKCnZhciB3ZWxsS25vd25TeW1ib2wgPSByZXF1aXJlKCcuLi9pbnRlcm5hbHMvd2VsbC1rbm93bi1zeW1ib2wnKTsKCnZhciByZWdleHBFeGVjID0gcmVxdWlyZSgnLi4vaW50ZXJuYWxzL3JlZ2V4cC1leGVjJyk7Cgp2YXIgY3JlYXRlTm9uRW51bWVyYWJsZVByb3BlcnR5ID0gcmVxdWlyZSgnLi4vaW50ZXJuYWxzL2NyZWF0ZS1ub24tZW51bWVyYWJsZS1wcm9wZXJ0eScpOwoKdmFyIFNQRUNJRVMgPSB3ZWxsS25vd25TeW1ib2woJ3NwZWNpZXMnKTsKdmFyIFJFUExBQ0VfU1VQUE9SVFNfTkFNRURfR1JPVVBTID0gIWZhaWxzKGZ1bmN0aW9uICgpIHsKICAvLyAjcmVwbGFjZSBuZWVkcyBidWlsdC1pbiBzdXBwb3J0IGZvciBuYW1lZCBncm91cHMuCiAgLy8gI21hdGNoIHdvcmtzIGZpbmUgYmVjYXVzZSBpdCBqdXN0IHJldHVybiB0aGUgZXhlYyByZXN1bHRzLCBldmVuIGlmIGl0IGhhcwogIC8vIGEgImdyb3BzIiBwcm9wZXJ0eS4KICB2YXIgcmUgPSAvLi87CgogIHJlLmV4ZWMgPSBmdW5jdGlvbiAoKSB7CiAgICB2YXIgcmVzdWx0ID0gW107CiAgICByZXN1bHQuZ3JvdXBzID0gewogICAgICBhOiAnNycKICAgIH07CiAgICByZXR1cm4gcmVzdWx0OwogIH07CgogIHJldHVybiAnJy5yZXBsYWNlKHJlLCAnJDxhPicpICE9PSAnNyc7Cn0pOyAvLyBJRSA8PSAxMSByZXBsYWNlcyAkMCB3aXRoIHRoZSB3aG9sZSBtYXRjaCwgYXMgaWYgaXQgd2FzICQmCi8vIGh0dHBzOi8vc3RhY2tvdmVyZmxvdy5jb20vcXVlc3Rpb25zLzYwMjQ2NjYvZ2V0dGluZy1pZS10by1yZXBsYWNlLWEtcmVnZXgtd2l0aC10aGUtbGl0ZXJhbC1zdHJpbmctMAoKdmFyIFJFUExBQ0VfS0VFUFNfJDAgPSBmdW5jdGlvbiAoKSB7CiAgcmV0dXJuICdhJy5yZXBsYWNlKC8uLywgJyQwJykgPT09ICckMCc7Cn0oKTsKCnZhciBSRVBMQUNFID0gd2VsbEtub3duU3ltYm9sKCdyZXBsYWNlJyk7IC8vIFNhZmFyaSA8PSAxMy4wLjMoPykgc3Vic3RpdHV0ZXMgbnRoIGNhcHR1cmUgd2hlcmUgbj5tIHdpdGggYW4gZW1wdHkgc3RyaW5nCgp2YXIgUkVHRVhQX1JFUExBQ0VfU1VCU1RJVFVURVNfVU5ERUZJTkVEX0NBUFRVUkUgPSBmdW5jdGlvbiAoKSB7CiAgaWYgKC8uL1tSRVBMQUNFXSkgewogICAgcmV0dXJuIC8uL1tSRVBMQUNFXSgnYScsICckMCcpID09PSAnJzsKICB9CgogIHJldHVybiBmYWxzZTsKfSgpOyAvLyBDaHJvbWUgNTEgaGFzIGEgYnVnZ3kgInNwbGl0IiBpbXBsZW1lbnRhdGlvbiB3aGVuIFJlZ0V4cCNleGVjICE9PSBuYXRpdmVFeGVjCi8vIFdlZXggSlMgaGFzIGZyb3plbiBidWlsdC1pbiBwcm90b3R5cGVzLCBzbyB1c2UgdHJ5IC8gY2F0Y2ggd3JhcHBlcgoKCnZhciBTUExJVF9XT1JLU19XSVRIX09WRVJXUklUVEVOX0VYRUMgPSAhZmFpbHMoZnVuY3Rpb24gKCkgewogIC8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZSByZWdleHAvbm8tZW1wdHktZ3JvdXAgLS0gcmVxdWlyZWQgZm9yIHRlc3RpbmcKICB2YXIgcmUgPSAvKD86KS87CiAgdmFyIG9yaWdpbmFsRXhlYyA9IHJlLmV4ZWM7CgogIHJlLmV4ZWMgPSBmdW5jdGlvbiAoKSB7CiAgICByZXR1cm4gb3JpZ2luYWxFeGVjLmFwcGx5KHRoaXMsIGFyZ3VtZW50cyk7CiAgfTsKCiAgdmFyIHJlc3VsdCA9ICdhYicuc3BsaXQocmUpOwogIHJldHVybiByZXN1bHQubGVuZ3RoICE9PSAyIHx8IHJlc3VsdFswXSAhPT0gJ2EnIHx8IHJlc3VsdFsxXSAhPT0gJ2InOwp9KTsKCm1vZHVsZS5leHBvcnRzID0gZnVuY3Rpb24gKEtFWSwgbGVuZ3RoLCBleGVjLCBzaGFtKSB7CiAgdmFyIFNZTUJPTCA9IHdlbGxLbm93blN5bWJvbChLRVkpOwogIHZhciBERUxFR0FURVNfVE9fU1lNQk9MID0gIWZhaWxzKGZ1bmN0aW9uICgpIHsKICAgIC8vIFN0cmluZyBtZXRob2RzIGNhbGwgc3ltYm9sLW5hbWVkIFJlZ0VwIG1ldGhvZHMKICAgIHZhciBPID0ge307CgogICAgT1tTWU1CT0xdID0gZnVuY3Rpb24gKCkgewogICAgICByZXR1cm4gNzsKICAgIH07CgogICAgcmV0dXJuICcnW0tFWV0oTykgIT0gNzsKICB9KTsKICB2YXIgREVMRUdBVEVTX1RPX0VYRUMgPSBERUxFR0FURVNfVE9fU1lNQk9MICYmICFmYWlscyhmdW5jdGlvbiAoKSB7CiAgICAvLyBTeW1ib2wtbmFtZWQgUmVnRXhwIG1ldGhvZHMgY2FsbCAuZXhlYwogICAgdmFyIGV4ZWNDYWxsZWQgPSBmYWxzZTsKICAgIHZhciByZSA9IC9hLzsKCiAgICBpZiAoS0VZID09PSAnc3BsaXQnKSB7CiAgICAgIC8vIFdlIGNhbid0IHVzZSByZWFsIHJlZ2V4IGhlcmUgc2luY2UgaXQgY2F1c2VzIGRlb3B0aW1pemF0aW9uCiAgICAgIC8vIGFuZCBzZXJpb3VzIHBlcmZvcm1hbmNlIGRlZ3JhZGF0aW9uIGluIFY4CiAgICAgIC8vIGh0dHBzOi8vZ2l0aHViLmNvbS96bG9pcm9jay9jb3JlLWpzL2lzc3Vlcy8zMDYKICAgICAgcmUgPSB7fTsgLy8gUmVnRXhwW0BAc3BsaXRdIGRvZXNuJ3QgY2FsbCB0aGUgcmVnZXgncyBleGVjIG1ldGhvZCwgYnV0IGZpcnN0IGNyZWF0ZXMKICAgICAgLy8gYSBuZXcgb25lLiBXZSBuZWVkIHRvIHJldHVybiB0aGUgcGF0Y2hlZCByZWdleCB3aGVuIGNyZWF0aW5nIHRoZSBuZXcgb25lLgoKICAgICAgcmUuY29uc3RydWN0b3IgPSB7fTsKCiAgICAgIHJlLmNvbnN0cnVjdG9yW1NQRUNJRVNdID0gZnVuY3Rpb24gKCkgewogICAgICAgIHJldHVybiByZTsKICAgICAgfTsKCiAgICAgIHJlLmZsYWdzID0gJyc7CiAgICAgIHJlW1NZTUJPTF0gPSAvLi9bU1lNQk9MXTsKICAgIH0KCiAgICByZS5leGVjID0gZnVuY3Rpb24gKCkgewogICAgICBleGVjQ2FsbGVkID0gdHJ1ZTsKICAgICAgcmV0dXJuIG51bGw7CiAgICB9OwoKICAgIHJlW1NZTUJPTF0oJycpOwogICAgcmV0dXJuICFleGVjQ2FsbGVkOwogIH0pOwoKICBpZiAoIURFTEVHQVRFU19UT19TWU1CT0wgfHwgIURFTEVHQVRFU19UT19FWEVDIHx8IEtFWSA9PT0gJ3JlcGxhY2UnICYmICEoUkVQTEFDRV9TVVBQT1JUU19OQU1FRF9HUk9VUFMgJiYgUkVQTEFDRV9LRUVQU18kMCAmJiAhUkVHRVhQX1JFUExBQ0VfU1VCU1RJVFVURVNfVU5ERUZJTkVEX0NBUFRVUkUpIHx8IEtFWSA9PT0gJ3NwbGl0JyAmJiAhU1BMSVRfV09SS1NfV0lUSF9PVkVSV1JJVFRFTl9FWEVDKSB7CiAgICB2YXIgbmF0aXZlUmVnRXhwTWV0aG9kID0gLy4vW1NZTUJPTF07CiAgICB2YXIgbWV0aG9kcyA9IGV4ZWMoU1lNQk9MLCAnJ1tLRVldLCBmdW5jdGlvbiAobmF0aXZlTWV0aG9kLCByZWdleHAsIHN0ciwgYXJnMiwgZm9yY2VTdHJpbmdNZXRob2QpIHsKICAgICAgaWYgKHJlZ2V4cC5leGVjID09PSByZWdleHBFeGVjKSB7CiAgICAgICAgaWYgKERFTEVHQVRFU19UT19TWU1CT0wgJiYgIWZvcmNlU3RyaW5nTWV0aG9kKSB7CiAgICAgICAgICAvLyBUaGUgbmF0aXZlIFN0cmluZyBtZXRob2QgYWxyZWFkeSBkZWxlZ2F0ZXMgdG8gQEBtZXRob2QgKHRoaXMKICAgICAgICAgIC8vIHBvbHlmaWxsZWQgZnVuY3Rpb24pLCBsZWFzaW5nIHRvIGluZmluaXRlIHJlY3Vyc2lvbi4KICAgICAgICAgIC8vIFdlIGF2b2lkIGl0IGJ5IGRpcmVjdGx5IGNhbGxpbmcgdGhlIG5hdGl2ZSBAQG1ldGhvZCBtZXRob2QuCiAgICAgICAgICByZXR1cm4gewogICAgICAgICAgICBkb25lOiB0cnVlLAogICAgICAgICAgICB2YWx1ZTogbmF0aXZlUmVnRXhwTWV0aG9kLmNhbGwocmVnZXhwLCBzdHIsIGFyZzIpCiAgICAgICAgICB9OwogICAgICAgIH0KCiAgICAgICAgcmV0dXJuIHsKICAgICAgICAgIGRvbmU6IHRydWUsCiAgICAgICAgICB2YWx1ZTogbmF0aXZlTWV0aG9kLmNhbGwoc3RyLCByZWdleHAsIGFyZzIpCiAgICAgICAgfTsKICAgICAgfQoKICAgICAgcmV0dXJuIHsKICAgICAgICBkb25lOiBmYWxzZQogICAgICB9OwogICAgfSwgewogICAgICBSRVBMQUNFX0tFRVBTXyQwOiBSRVBMQUNFX0tFRVBTXyQwLAogICAgICBSRUdFWFBfUkVQTEFDRV9TVUJTVElUVVRFU19VTkRFRklORURfQ0FQVFVSRTogUkVHRVhQX1JFUExBQ0VfU1VCU1RJVFVURVNfVU5ERUZJTkVEX0NBUFRVUkUKICAgIH0pOwogICAgdmFyIHN0cmluZ01ldGhvZCA9IG1ldGhvZHNbMF07CiAgICB2YXIgcmVnZXhNZXRob2QgPSBtZXRob2RzWzFdOwogICAgcmVkZWZpbmUoU3RyaW5nLnByb3RvdHlwZSwgS0VZLCBzdHJpbmdNZXRob2QpOwogICAgcmVkZWZpbmUoUmVnRXhwLnByb3RvdHlwZSwgU1lNQk9MLCBsZW5ndGggPT0gMiAvLyAyMS4yLjUuOCBSZWdFeHAucHJvdG90eXBlW0BAcmVwbGFjZV0oc3RyaW5nLCByZXBsYWNlVmFsdWUpCiAgICAvLyAyMS4yLjUuMTEgUmVnRXhwLnByb3RvdHlwZVtAQHNwbGl0XShzdHJpbmcsIGxpbWl0KQogICAgPyBmdW5jdGlvbiAoc3RyaW5nLCBhcmcpIHsKICAgICAgcmV0dXJuIHJlZ2V4TWV0aG9kLmNhbGwoc3RyaW5nLCB0aGlzLCBhcmcpOwogICAgfSAvLyAyMS4yLjUuNiBSZWdFeHAucHJvdG90eXBlW0BAbWF0Y2hdKHN0cmluZykKICAgIC8vIDIxLjIuNS45IFJlZ0V4cC5wcm90b3R5cGVbQEBzZWFyY2hdKHN0cmluZykKICAgIDogZnVuY3Rpb24gKHN0cmluZykgewogICAgICByZXR1cm4gcmVnZXhNZXRob2QuY2FsbChzdHJpbmcsIHRoaXMpOwogICAgfSk7CiAgfQoKICBpZiAoc2hhbSkgY3JlYXRlTm9uRW51bWVyYWJsZVByb3BlcnR5KFJlZ0V4cC5wcm90b3R5cGVbU1lNQk9MXSwgJ3NoYW0nLCB0cnVlKTsKfTs="},{"version":3,"sources":["C:/Users/Administrator/Desktop/qd/blog/vuepress-blog-demo/xcui-blog/node_modules/core-js/internals/fix-regexp-well-known-symbol-logic.js"],"names":["require","redefine","fails","wellKnownSymbol","regexpExec","createNonEnumerableProperty","SPECIES","REPLACE_SUPPORTS_NAMED_GROUPS","re","exec","result","groups","a","replace","REPLACE_KEEPS_$0","REPLACE","REGEXP_REPLACE_SUBSTITUTES_UNDEFINED_CAPTURE","SPLIT_WORKS_WITH_OVERWRITTEN_EXEC","originalExec","apply","arguments","split","length","module","exports","KEY","sham","SYMBOL","DELEGATES_TO_SYMBOL","O","DELEGATES_TO_EXEC","execCalled","constructor","flags","nativeRegExpMethod","methods","nativeMethod","regexp","str","arg2","forceStringMethod","done","value","call","stringMethod","regexMethod","String","prototype","RegExp","string","arg"],"mappings":"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","sourcesContent":["'use strict';\n// TODO: Remove from `core-js@4` since it's moved to entry points\nrequire('../modules/es.regexp.exec');\nvar redefine = require('../internals/redefine');\nvar fails = require('../internals/fails');\nvar wellKnownSymbol = require('../internals/well-known-symbol');\nvar regexpExec = require('../internals/regexp-exec');\nvar createNonEnumerableProperty = require('../internals/create-non-enumerable-property');\n\nvar SPECIES = wellKnownSymbol('species');\n\nvar REPLACE_SUPPORTS_NAMED_GROUPS = !fails(function () {\n  // #replace needs built-in support for named groups.\n  // #match works fine because it just return the exec results, even if it has\n  // a \"grops\" property.\n  var re = /./;\n  re.exec = function () {\n    var result = [];\n    result.groups = { a: '7' };\n    return result;\n  };\n  return ''.replace(re, '$<a>') !== '7';\n});\n\n// IE <= 11 replaces $0 with the whole match, as if it was $&\n// https://stackoverflow.com/questions/6024666/getting-ie-to-replace-a-regex-with-the-literal-string-0\nvar REPLACE_KEEPS_$0 = (function () {\n  return 'a'.replace(/./, '$0') === '$0';\n})();\n\nvar REPLACE = wellKnownSymbol('replace');\n// Safari <= 13.0.3(?) substitutes nth capture where n>m with an empty string\nvar REGEXP_REPLACE_SUBSTITUTES_UNDEFINED_CAPTURE = (function () {\n  if (/./[REPLACE]) {\n    return /./[REPLACE]('a', '$0') === '';\n  }\n  return false;\n})();\n\n// Chrome 51 has a buggy \"split\" implementation when RegExp#exec !== nativeExec\n// Weex JS has frozen built-in prototypes, so use try / catch wrapper\nvar SPLIT_WORKS_WITH_OVERWRITTEN_EXEC = !fails(function () {\n  // eslint-disable-next-line regexp/no-empty-group -- required for testing\n  var re = /(?:)/;\n  var originalExec = re.exec;\n  re.exec = function () { return originalExec.apply(this, arguments); };\n  var result = 'ab'.split(re);\n  return result.length !== 2 || result[0] !== 'a' || result[1] !== 'b';\n});\n\nmodule.exports = function (KEY, length, exec, sham) {\n  var SYMBOL = wellKnownSymbol(KEY);\n\n  var DELEGATES_TO_SYMBOL = !fails(function () {\n    // String methods call symbol-named RegEp methods\n    var O = {};\n    O[SYMBOL] = function () { return 7; };\n    return ''[KEY](O) != 7;\n  });\n\n  var DELEGATES_TO_EXEC = DELEGATES_TO_SYMBOL && !fails(function () {\n    // Symbol-named RegExp methods call .exec\n    var execCalled = false;\n    var re = /a/;\n\n    if (KEY === 'split') {\n      // We can't use real regex here since it causes deoptimization\n      // and serious performance degradation in V8\n      // https://github.com/zloirock/core-js/issues/306\n      re = {};\n      // RegExp[@@split] doesn't call the regex's exec method, but first creates\n      // a new one. We need to return the patched regex when creating the new one.\n      re.constructor = {};\n      re.constructor[SPECIES] = function () { return re; };\n      re.flags = '';\n      re[SYMBOL] = /./[SYMBOL];\n    }\n\n    re.exec = function () { execCalled = true; return null; };\n\n    re[SYMBOL]('');\n    return !execCalled;\n  });\n\n  if (\n    !DELEGATES_TO_SYMBOL ||\n    !DELEGATES_TO_EXEC ||\n    (KEY === 'replace' && !(\n      REPLACE_SUPPORTS_NAMED_GROUPS &&\n      REPLACE_KEEPS_$0 &&\n      !REGEXP_REPLACE_SUBSTITUTES_UNDEFINED_CAPTURE\n    )) ||\n    (KEY === 'split' && !SPLIT_WORKS_WITH_OVERWRITTEN_EXEC)\n  ) {\n    var nativeRegExpMethod = /./[SYMBOL];\n    var methods = exec(SYMBOL, ''[KEY], function (nativeMethod, regexp, str, arg2, forceStringMethod) {\n      if (regexp.exec === regexpExec) {\n        if (DELEGATES_TO_SYMBOL && !forceStringMethod) {\n          // The native String method already delegates to @@method (this\n          // polyfilled function), leasing to infinite recursion.\n          // We avoid it by directly calling the native @@method method.\n          return { done: true, value: nativeRegExpMethod.call(regexp, str, arg2) };\n        }\n        return { done: true, value: nativeMethod.call(str, regexp, arg2) };\n      }\n      return { done: false };\n    }, {\n      REPLACE_KEEPS_$0: REPLACE_KEEPS_$0,\n      REGEXP_REPLACE_SUBSTITUTES_UNDEFINED_CAPTURE: REGEXP_REPLACE_SUBSTITUTES_UNDEFINED_CAPTURE\n    });\n    var stringMethod = methods[0];\n    var regexMethod = methods[1];\n\n    redefine(String.prototype, KEY, stringMethod);\n    redefine(RegExp.prototype, SYMBOL, length == 2\n      // 21.2.5.8 RegExp.prototype[@@replace](string, replaceValue)\n      // 21.2.5.11 RegExp.prototype[@@split](string, limit)\n      ? function (string, arg) { return regexMethod.call(string, this, arg); }\n      // 21.2.5.6 RegExp.prototype[@@match](string)\n      // 21.2.5.9 RegExp.prototype[@@search](string)\n      : function (string) { return regexMethod.call(string, this); }\n    );\n  }\n\n  if (sham) createNonEnumerableProperty(RegExp.prototype[SYMBOL], 'sham', true);\n};\n"]}]}