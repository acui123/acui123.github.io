{"remainingRequest":"C:\\Users\\Administrator\\Desktop\\qd\\blog\\vuepress-blog-demo\\xcui-blog\\node_modules\\babel-loader\\lib\\index.js??ref--3-1!C:\\Users\\Administrator\\Desktop\\qd\\blog\\vuepress-blog-demo\\xcui-blog\\node_modules\\debug\\src\\common.js","dependencies":[{"path":"C:\\Users\\Administrator\\Desktop\\qd\\blog\\vuepress-blog-demo\\xcui-blog\\node_modules\\debug\\src\\common.js","mtime":499162500000},{"path":"C:\\Users\\Administrator\\Desktop\\qd\\blog\\vuepress-blog-demo\\xcui-blog\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\Administrator\\Desktop\\qd\\blog\\vuepress-blog-demo\\xcui-blog\\node_modules\\babel-loader\\lib\\index.js","mtime":315532800000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["C:/Users/Administrator/Desktop/qd/blog/vuepress-blog-demo/xcui-blog/node_modules/debug/src/common.js"],"names":["setup","env","createDebug","debug","coerce","disable","enable","enabled","humanize","require","destroy","Object","keys","forEach","key","names","skips","formatters","selectColor","namespace","hash","i","length","charCodeAt","colors","Math","abs","prevTime","enableOverride","args","self","curr","Number","Date","ms","diff","prev","unshift","index","replace","match","format","formatter","val","call","splice","formatArgs","logFn","log","apply","useColors","color","extend","defineProperty","enumerable","configurable","get","set","v","init","delimiter","newDebug","namespaces","save","split","len","push","RegExp","substr","map","toNamespace","join","name","test","regexp","toString","substring","Error","stack","message","console","warn","load","module","exports"],"mappings":"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","sourcesContent":["\n/**\n * This is the common logic for both the Node.js and web browser\n * implementations of `debug()`.\n */\n\nfunction setup(env) {\n\tcreateDebug.debug = createDebug;\n\tcreateDebug.default = createDebug;\n\tcreateDebug.coerce = coerce;\n\tcreateDebug.disable = disable;\n\tcreateDebug.enable = enable;\n\tcreateDebug.enabled = enabled;\n\tcreateDebug.humanize = require('ms');\n\tcreateDebug.destroy = destroy;\n\n\tObject.keys(env).forEach(key => {\n\t\tcreateDebug[key] = env[key];\n\t});\n\n\t/**\n\t* The currently active debug mode names, and names to skip.\n\t*/\n\n\tcreateDebug.names = [];\n\tcreateDebug.skips = [];\n\n\t/**\n\t* Map of special \"%n\" handling functions, for the debug \"format\" argument.\n\t*\n\t* Valid key names are a single, lower or upper-case letter, i.e. \"n\" and \"N\".\n\t*/\n\tcreateDebug.formatters = {};\n\n\t/**\n\t* Selects a color for a debug namespace\n\t* @param {String} namespace The namespace string for the for the debug instance to be colored\n\t* @return {Number|String} An ANSI color code for the given namespace\n\t* @api private\n\t*/\n\tfunction selectColor(namespace) {\n\t\tlet hash = 0;\n\n\t\tfor (let i = 0; i < namespace.length; i++) {\n\t\t\thash = ((hash << 5) - hash) + namespace.charCodeAt(i);\n\t\t\thash |= 0; // Convert to 32bit integer\n\t\t}\n\n\t\treturn createDebug.colors[Math.abs(hash) % createDebug.colors.length];\n\t}\n\tcreateDebug.selectColor = selectColor;\n\n\t/**\n\t* Create a debugger with the given `namespace`.\n\t*\n\t* @param {String} namespace\n\t* @return {Function}\n\t* @api public\n\t*/\n\tfunction createDebug(namespace) {\n\t\tlet prevTime;\n\t\tlet enableOverride = null;\n\n\t\tfunction debug(...args) {\n\t\t\t// Disabled?\n\t\t\tif (!debug.enabled) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tconst self = debug;\n\n\t\t\t// Set `diff` timestamp\n\t\t\tconst curr = Number(new Date());\n\t\t\tconst ms = curr - (prevTime || curr);\n\t\t\tself.diff = ms;\n\t\t\tself.prev = prevTime;\n\t\t\tself.curr = curr;\n\t\t\tprevTime = curr;\n\n\t\t\targs[0] = createDebug.coerce(args[0]);\n\n\t\t\tif (typeof args[0] !== 'string') {\n\t\t\t\t// Anything else let's inspect with %O\n\t\t\t\targs.unshift('%O');\n\t\t\t}\n\n\t\t\t// Apply any `formatters` transformations\n\t\t\tlet index = 0;\n\t\t\targs[0] = args[0].replace(/%([a-zA-Z%])/g, (match, format) => {\n\t\t\t\t// If we encounter an escaped % then don't increase the array index\n\t\t\t\tif (match === '%%') {\n\t\t\t\t\treturn '%';\n\t\t\t\t}\n\t\t\t\tindex++;\n\t\t\t\tconst formatter = createDebug.formatters[format];\n\t\t\t\tif (typeof formatter === 'function') {\n\t\t\t\t\tconst val = args[index];\n\t\t\t\t\tmatch = formatter.call(self, val);\n\n\t\t\t\t\t// Now we need to remove `args[index]` since it's inlined in the `format`\n\t\t\t\t\targs.splice(index, 1);\n\t\t\t\t\tindex--;\n\t\t\t\t}\n\t\t\t\treturn match;\n\t\t\t});\n\n\t\t\t// Apply env-specific formatting (colors, etc.)\n\t\t\tcreateDebug.formatArgs.call(self, args);\n\n\t\t\tconst logFn = self.log || createDebug.log;\n\t\t\tlogFn.apply(self, args);\n\t\t}\n\n\t\tdebug.namespace = namespace;\n\t\tdebug.useColors = createDebug.useColors();\n\t\tdebug.color = createDebug.selectColor(namespace);\n\t\tdebug.extend = extend;\n\t\tdebug.destroy = createDebug.destroy; // XXX Temporary. Will be removed in the next major release.\n\n\t\tObject.defineProperty(debug, 'enabled', {\n\t\t\tenumerable: true,\n\t\t\tconfigurable: false,\n\t\t\tget: () => enableOverride === null ? createDebug.enabled(namespace) : enableOverride,\n\t\t\tset: v => {\n\t\t\t\tenableOverride = v;\n\t\t\t}\n\t\t});\n\n\t\t// Env-specific initialization logic for debug instances\n\t\tif (typeof createDebug.init === 'function') {\n\t\t\tcreateDebug.init(debug);\n\t\t}\n\n\t\treturn debug;\n\t}\n\n\tfunction extend(namespace, delimiter) {\n\t\tconst newDebug = createDebug(this.namespace + (typeof delimiter === 'undefined' ? ':' : delimiter) + namespace);\n\t\tnewDebug.log = this.log;\n\t\treturn newDebug;\n\t}\n\n\t/**\n\t* Enables a debug mode by namespaces. This can include modes\n\t* separated by a colon and wildcards.\n\t*\n\t* @param {String} namespaces\n\t* @api public\n\t*/\n\tfunction enable(namespaces) {\n\t\tcreateDebug.save(namespaces);\n\n\t\tcreateDebug.names = [];\n\t\tcreateDebug.skips = [];\n\n\t\tlet i;\n\t\tconst split = (typeof namespaces === 'string' ? namespaces : '').split(/[\\s,]+/);\n\t\tconst len = split.length;\n\n\t\tfor (i = 0; i < len; i++) {\n\t\t\tif (!split[i]) {\n\t\t\t\t// ignore empty strings\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tnamespaces = split[i].replace(/\\*/g, '.*?');\n\n\t\t\tif (namespaces[0] === '-') {\n\t\t\t\tcreateDebug.skips.push(new RegExp('^' + namespaces.substr(1) + '$'));\n\t\t\t} else {\n\t\t\t\tcreateDebug.names.push(new RegExp('^' + namespaces + '$'));\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t* Disable debug output.\n\t*\n\t* @return {String} namespaces\n\t* @api public\n\t*/\n\tfunction disable() {\n\t\tconst namespaces = [\n\t\t\t...createDebug.names.map(toNamespace),\n\t\t\t...createDebug.skips.map(toNamespace).map(namespace => '-' + namespace)\n\t\t].join(',');\n\t\tcreateDebug.enable('');\n\t\treturn namespaces;\n\t}\n\n\t/**\n\t* Returns true if the given mode name is enabled, false otherwise.\n\t*\n\t* @param {String} name\n\t* @return {Boolean}\n\t* @api public\n\t*/\n\tfunction enabled(name) {\n\t\tif (name[name.length - 1] === '*') {\n\t\t\treturn true;\n\t\t}\n\n\t\tlet i;\n\t\tlet len;\n\n\t\tfor (i = 0, len = createDebug.skips.length; i < len; i++) {\n\t\t\tif (createDebug.skips[i].test(name)) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\n\t\tfor (i = 0, len = createDebug.names.length; i < len; i++) {\n\t\t\tif (createDebug.names[i].test(name)) {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\n\t\treturn false;\n\t}\n\n\t/**\n\t* Convert regexp to namespace\n\t*\n\t* @param {RegExp} regxep\n\t* @return {String} namespace\n\t* @api private\n\t*/\n\tfunction toNamespace(regexp) {\n\t\treturn regexp.toString()\n\t\t\t.substring(2, regexp.toString().length - 2)\n\t\t\t.replace(/\\.\\*\\?$/, '*');\n\t}\n\n\t/**\n\t* Coerce `val`.\n\t*\n\t* @param {Mixed} val\n\t* @return {Mixed}\n\t* @api private\n\t*/\n\tfunction coerce(val) {\n\t\tif (val instanceof Error) {\n\t\t\treturn val.stack || val.message;\n\t\t}\n\t\treturn val;\n\t}\n\n\t/**\n\t* XXX DO NOT USE. This is a temporary stub function.\n\t* XXX It WILL be removed in the next major release.\n\t*/\n\tfunction destroy() {\n\t\tconsole.warn('Instance method `debug.destroy()` is deprecated and no longer does anything. It will be removed in the next major version of `debug`.');\n\t}\n\n\tcreateDebug.enable(createDebug.load());\n\n\treturn createDebug;\n}\n\nmodule.exports = setup;\n"]}]}