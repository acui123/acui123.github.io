{"remainingRequest":"C:\\Users\\Administrator\\Desktop\\qd\\blog\\vuepress-blog-demo\\xcui-blog\\node_modules\\babel-loader\\lib\\index.js??ref--3-1!C:\\Users\\Administrator\\Desktop\\qd\\blog\\vuepress-blog-demo\\xcui-blog\\node_modules\\core-js\\modules\\es.string.split.js","dependencies":[{"path":"C:\\Users\\Administrator\\Desktop\\qd\\blog\\vuepress-blog-demo\\xcui-blog\\node_modules\\core-js\\modules\\es.string.split.js","mtime":499162500000},{"path":"C:\\Users\\Administrator\\Desktop\\qd\\blog\\vuepress-blog-demo\\xcui-blog\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\Administrator\\Desktop\\qd\\blog\\vuepress-blog-demo\\xcui-blog\\node_modules\\babel-loader\\lib\\index.js","mtime":315532800000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:J3VzZSBzdHJpY3QnOwoKdmFyIGZpeFJlZ0V4cFdlbGxLbm93blN5bWJvbExvZ2ljID0gcmVxdWlyZSgnLi4vaW50ZXJuYWxzL2ZpeC1yZWdleHAtd2VsbC1rbm93bi1zeW1ib2wtbG9naWMnKTsKCnZhciBpc1JlZ0V4cCA9IHJlcXVpcmUoJy4uL2ludGVybmFscy9pcy1yZWdleHAnKTsKCnZhciBhbk9iamVjdCA9IHJlcXVpcmUoJy4uL2ludGVybmFscy9hbi1vYmplY3QnKTsKCnZhciByZXF1aXJlT2JqZWN0Q29lcmNpYmxlID0gcmVxdWlyZSgnLi4vaW50ZXJuYWxzL3JlcXVpcmUtb2JqZWN0LWNvZXJjaWJsZScpOwoKdmFyIHNwZWNpZXNDb25zdHJ1Y3RvciA9IHJlcXVpcmUoJy4uL2ludGVybmFscy9zcGVjaWVzLWNvbnN0cnVjdG9yJyk7Cgp2YXIgYWR2YW5jZVN0cmluZ0luZGV4ID0gcmVxdWlyZSgnLi4vaW50ZXJuYWxzL2FkdmFuY2Utc3RyaW5nLWluZGV4Jyk7Cgp2YXIgdG9MZW5ndGggPSByZXF1aXJlKCcuLi9pbnRlcm5hbHMvdG8tbGVuZ3RoJyk7Cgp2YXIgY2FsbFJlZ0V4cEV4ZWMgPSByZXF1aXJlKCcuLi9pbnRlcm5hbHMvcmVnZXhwLWV4ZWMtYWJzdHJhY3QnKTsKCnZhciByZWdleHBFeGVjID0gcmVxdWlyZSgnLi4vaW50ZXJuYWxzL3JlZ2V4cC1leGVjJyk7Cgp2YXIgZmFpbHMgPSByZXF1aXJlKCcuLi9pbnRlcm5hbHMvZmFpbHMnKTsKCnZhciBhcnJheVB1c2ggPSBbXS5wdXNoOwp2YXIgbWluID0gTWF0aC5taW47CnZhciBNQVhfVUlOVDMyID0gMHhGRkZGRkZGRjsgLy8gYmFiZWwtbWluaWZ5IHRyYW5zcGlsZXMgUmVnRXhwKCd4JywgJ3knKSAtPiAveC95IGFuZCBpdCBjYXVzZXMgU3ludGF4RXJyb3IKCnZhciBTVVBQT1JUU19ZID0gIWZhaWxzKGZ1bmN0aW9uICgpIHsKICByZXR1cm4gIVJlZ0V4cChNQVhfVUlOVDMyLCAneScpOwp9KTsgLy8gQEBzcGxpdCBsb2dpYwoKZml4UmVnRXhwV2VsbEtub3duU3ltYm9sTG9naWMoJ3NwbGl0JywgMiwgZnVuY3Rpb24gKFNQTElULCBuYXRpdmVTcGxpdCwgbWF5YmVDYWxsTmF0aXZlKSB7CiAgdmFyIGludGVybmFsU3BsaXQ7CgogIGlmICgnYWJiYycuc3BsaXQoLyhiKSovKVsxXSA9PSAnYycgfHwgLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIHJlZ2V4cC9uby1lbXB0eS1ncm91cCAtLSByZXF1aXJlZCBmb3IgdGVzdGluZwogICd0ZXN0Jy5zcGxpdCgvKD86KS8sIC0xKS5sZW5ndGggIT0gNCB8fCAnYWInLnNwbGl0KC8oPzphYikqLykubGVuZ3RoICE9IDIgfHwgJy4nLnNwbGl0KC8oLj8pKC4/KS8pLmxlbmd0aCAhPSA0IHx8IC8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZSByZWdleHAvbm8tYXNzZXJ0aW9uLWNhcHR1cmluZy1ncm91cCwgcmVnZXhwL25vLWVtcHR5LWdyb3VwIC0tIHJlcXVpcmVkIGZvciB0ZXN0aW5nCiAgJy4nLnNwbGl0KC8oKSgpLykubGVuZ3RoID4gMSB8fCAnJy5zcGxpdCgvLj8vKS5sZW5ndGgpIHsKICAgIC8vIGJhc2VkIG9uIGVzNS1zaGltIGltcGxlbWVudGF0aW9uLCBuZWVkIHRvIHJld29yayBpdAogICAgaW50ZXJuYWxTcGxpdCA9IGZ1bmN0aW9uIChzZXBhcmF0b3IsIGxpbWl0KSB7CiAgICAgIHZhciBzdHJpbmcgPSBTdHJpbmcocmVxdWlyZU9iamVjdENvZXJjaWJsZSh0aGlzKSk7CiAgICAgIHZhciBsaW0gPSBsaW1pdCA9PT0gdW5kZWZpbmVkID8gTUFYX1VJTlQzMiA6IGxpbWl0ID4+PiAwOwogICAgICBpZiAobGltID09PSAwKSByZXR1cm4gW107CiAgICAgIGlmIChzZXBhcmF0b3IgPT09IHVuZGVmaW5lZCkgcmV0dXJuIFtzdHJpbmddOyAvLyBJZiBgc2VwYXJhdG9yYCBpcyBub3QgYSByZWdleCwgdXNlIG5hdGl2ZSBzcGxpdAoKICAgICAgaWYgKCFpc1JlZ0V4cChzZXBhcmF0b3IpKSB7CiAgICAgICAgcmV0dXJuIG5hdGl2ZVNwbGl0LmNhbGwoc3RyaW5nLCBzZXBhcmF0b3IsIGxpbSk7CiAgICAgIH0KCiAgICAgIHZhciBvdXRwdXQgPSBbXTsKICAgICAgdmFyIGZsYWdzID0gKHNlcGFyYXRvci5pZ25vcmVDYXNlID8gJ2knIDogJycpICsgKHNlcGFyYXRvci5tdWx0aWxpbmUgPyAnbScgOiAnJykgKyAoc2VwYXJhdG9yLnVuaWNvZGUgPyAndScgOiAnJykgKyAoc2VwYXJhdG9yLnN0aWNreSA/ICd5JyA6ICcnKTsKICAgICAgdmFyIGxhc3RMYXN0SW5kZXggPSAwOyAvLyBNYWtlIGBnbG9iYWxgIGFuZCBhdm9pZCBgbGFzdEluZGV4YCBpc3N1ZXMgYnkgd29ya2luZyB3aXRoIGEgY29weQoKICAgICAgdmFyIHNlcGFyYXRvckNvcHkgPSBuZXcgUmVnRXhwKHNlcGFyYXRvci5zb3VyY2UsIGZsYWdzICsgJ2cnKTsKICAgICAgdmFyIG1hdGNoLCBsYXN0SW5kZXgsIGxhc3RMZW5ndGg7CgogICAgICB3aGlsZSAobWF0Y2ggPSByZWdleHBFeGVjLmNhbGwoc2VwYXJhdG9yQ29weSwgc3RyaW5nKSkgewogICAgICAgIGxhc3RJbmRleCA9IHNlcGFyYXRvckNvcHkubGFzdEluZGV4OwoKICAgICAgICBpZiAobGFzdEluZGV4ID4gbGFzdExhc3RJbmRleCkgewogICAgICAgICAgb3V0cHV0LnB1c2goc3RyaW5nLnNsaWNlKGxhc3RMYXN0SW5kZXgsIG1hdGNoLmluZGV4KSk7CiAgICAgICAgICBpZiAobWF0Y2gubGVuZ3RoID4gMSAmJiBtYXRjaC5pbmRleCA8IHN0cmluZy5sZW5ndGgpIGFycmF5UHVzaC5hcHBseShvdXRwdXQsIG1hdGNoLnNsaWNlKDEpKTsKICAgICAgICAgIGxhc3RMZW5ndGggPSBtYXRjaFswXS5sZW5ndGg7CiAgICAgICAgICBsYXN0TGFzdEluZGV4ID0gbGFzdEluZGV4OwogICAgICAgICAgaWYgKG91dHB1dC5sZW5ndGggPj0gbGltKSBicmVhazsKICAgICAgICB9CgogICAgICAgIGlmIChzZXBhcmF0b3JDb3B5Lmxhc3RJbmRleCA9PT0gbWF0Y2guaW5kZXgpIHNlcGFyYXRvckNvcHkubGFzdEluZGV4Kys7IC8vIEF2b2lkIGFuIGluZmluaXRlIGxvb3AKICAgICAgfQoKICAgICAgaWYgKGxhc3RMYXN0SW5kZXggPT09IHN0cmluZy5sZW5ndGgpIHsKICAgICAgICBpZiAobGFzdExlbmd0aCB8fCAhc2VwYXJhdG9yQ29weS50ZXN0KCcnKSkgb3V0cHV0LnB1c2goJycpOwogICAgICB9IGVsc2Ugb3V0cHV0LnB1c2goc3RyaW5nLnNsaWNlKGxhc3RMYXN0SW5kZXgpKTsKCiAgICAgIHJldHVybiBvdXRwdXQubGVuZ3RoID4gbGltID8gb3V0cHV0LnNsaWNlKDAsIGxpbSkgOiBvdXRwdXQ7CiAgICB9OyAvLyBDaGFrcmEsIFY4CgogIH0gZWxzZSBpZiAoJzAnLnNwbGl0KHVuZGVmaW5lZCwgMCkubGVuZ3RoKSB7CiAgICBpbnRlcm5hbFNwbGl0ID0gZnVuY3Rpb24gKHNlcGFyYXRvciwgbGltaXQpIHsKICAgICAgcmV0dXJuIHNlcGFyYXRvciA9PT0gdW5kZWZpbmVkICYmIGxpbWl0ID09PSAwID8gW10gOiBuYXRpdmVTcGxpdC5jYWxsKHRoaXMsIHNlcGFyYXRvciwgbGltaXQpOwogICAgfTsKICB9IGVsc2UgaW50ZXJuYWxTcGxpdCA9IG5hdGl2ZVNwbGl0OwoKICByZXR1cm4gWy8vIGBTdHJpbmcucHJvdG90eXBlLnNwbGl0YCBtZXRob2QKICAvLyBodHRwczovL3RjMzkuZXMvZWNtYTI2Mi8jc2VjLXN0cmluZy5wcm90b3R5cGUuc3BsaXQKICBmdW5jdGlvbiBzcGxpdChzZXBhcmF0b3IsIGxpbWl0KSB7CiAgICB2YXIgTyA9IHJlcXVpcmVPYmplY3RDb2VyY2libGUodGhpcyk7CiAgICB2YXIgc3BsaXR0ZXIgPSBzZXBhcmF0b3IgPT0gdW5kZWZpbmVkID8gdW5kZWZpbmVkIDogc2VwYXJhdG9yW1NQTElUXTsKICAgIHJldHVybiBzcGxpdHRlciAhPT0gdW5kZWZpbmVkID8gc3BsaXR0ZXIuY2FsbChzZXBhcmF0b3IsIE8sIGxpbWl0KSA6IGludGVybmFsU3BsaXQuY2FsbChTdHJpbmcoTyksIHNlcGFyYXRvciwgbGltaXQpOwogIH0sIC8vIGBSZWdFeHAucHJvdG90eXBlW0BAc3BsaXRdYCBtZXRob2QKICAvLyBodHRwczovL3RjMzkuZXMvZWNtYTI2Mi8jc2VjLXJlZ2V4cC5wcm90b3R5cGUtQEBzcGxpdAogIC8vCiAgLy8gTk9URTogVGhpcyBjYW5ub3QgYmUgcHJvcGVybHkgcG9seWZpbGxlZCBpbiBlbmdpbmVzIHRoYXQgZG9uJ3Qgc3VwcG9ydAogIC8vIHRoZSAneScgZmxhZy4KICBmdW5jdGlvbiAocmVnZXhwLCBsaW1pdCkgewogICAgdmFyIHJlcyA9IG1heWJlQ2FsbE5hdGl2ZShpbnRlcm5hbFNwbGl0LCByZWdleHAsIHRoaXMsIGxpbWl0LCBpbnRlcm5hbFNwbGl0ICE9PSBuYXRpdmVTcGxpdCk7CiAgICBpZiAocmVzLmRvbmUpIHJldHVybiByZXMudmFsdWU7CiAgICB2YXIgcnggPSBhbk9iamVjdChyZWdleHApOwogICAgdmFyIFMgPSBTdHJpbmcodGhpcyk7CiAgICB2YXIgQyA9IHNwZWNpZXNDb25zdHJ1Y3RvcihyeCwgUmVnRXhwKTsKICAgIHZhciB1bmljb2RlTWF0Y2hpbmcgPSByeC51bmljb2RlOwogICAgdmFyIGZsYWdzID0gKHJ4Lmlnbm9yZUNhc2UgPyAnaScgOiAnJykgKyAocngubXVsdGlsaW5lID8gJ20nIDogJycpICsgKHJ4LnVuaWNvZGUgPyAndScgOiAnJykgKyAoU1VQUE9SVFNfWSA/ICd5JyA6ICdnJyk7IC8vIF4oPyArIHJ4ICsgKSBpcyBuZWVkZWQsIGluIGNvbWJpbmF0aW9uIHdpdGggc29tZSBTIHNsaWNpbmcsIHRvCiAgICAvLyBzaW11bGF0ZSB0aGUgJ3knIGZsYWcuCgogICAgdmFyIHNwbGl0dGVyID0gbmV3IEMoU1VQUE9SVFNfWSA/IHJ4IDogJ14oPzonICsgcnguc291cmNlICsgJyknLCBmbGFncyk7CiAgICB2YXIgbGltID0gbGltaXQgPT09IHVuZGVmaW5lZCA/IE1BWF9VSU5UMzIgOiBsaW1pdCA+Pj4gMDsKICAgIGlmIChsaW0gPT09IDApIHJldHVybiBbXTsKICAgIGlmIChTLmxlbmd0aCA9PT0gMCkgcmV0dXJuIGNhbGxSZWdFeHBFeGVjKHNwbGl0dGVyLCBTKSA9PT0gbnVsbCA/IFtTXSA6IFtdOwogICAgdmFyIHAgPSAwOwogICAgdmFyIHEgPSAwOwogICAgdmFyIEEgPSBbXTsKCiAgICB3aGlsZSAocSA8IFMubGVuZ3RoKSB7CiAgICAgIHNwbGl0dGVyLmxhc3RJbmRleCA9IFNVUFBPUlRTX1kgPyBxIDogMDsKICAgICAgdmFyIHogPSBjYWxsUmVnRXhwRXhlYyhzcGxpdHRlciwgU1VQUE9SVFNfWSA/IFMgOiBTLnNsaWNlKHEpKTsKICAgICAgdmFyIGU7CgogICAgICBpZiAoeiA9PT0gbnVsbCB8fCAoZSA9IG1pbih0b0xlbmd0aChzcGxpdHRlci5sYXN0SW5kZXggKyAoU1VQUE9SVFNfWSA/IDAgOiBxKSksIFMubGVuZ3RoKSkgPT09IHApIHsKICAgICAgICBxID0gYWR2YW5jZVN0cmluZ0luZGV4KFMsIHEsIHVuaWNvZGVNYXRjaGluZyk7CiAgICAgIH0gZWxzZSB7CiAgICAgICAgQS5wdXNoKFMuc2xpY2UocCwgcSkpOwogICAgICAgIGlmIChBLmxlbmd0aCA9PT0gbGltKSByZXR1cm4gQTsKCiAgICAgICAgZm9yICh2YXIgaSA9IDE7IGkgPD0gei5sZW5ndGggLSAxOyBpKyspIHsKICAgICAgICAgIEEucHVzaCh6W2ldKTsKICAgICAgICAgIGlmIChBLmxlbmd0aCA9PT0gbGltKSByZXR1cm4gQTsKICAgICAgICB9CgogICAgICAgIHEgPSBwID0gZTsKICAgICAgfQogICAgfQoKICAgIEEucHVzaChTLnNsaWNlKHApKTsKICAgIHJldHVybiBBOwogIH1dOwp9LCAhU1VQUE9SVFNfWSk7"},{"version":3,"sources":["C:/Users/Administrator/Desktop/qd/blog/vuepress-blog-demo/xcui-blog/node_modules/core-js/modules/es.string.split.js"],"names":["fixRegExpWellKnownSymbolLogic","require","isRegExp","anObject","requireObjectCoercible","speciesConstructor","advanceStringIndex","toLength","callRegExpExec","regexpExec","fails","arrayPush","push","min","Math","MAX_UINT32","SUPPORTS_Y","RegExp","SPLIT","nativeSplit","maybeCallNative","internalSplit","split","length","separator","limit","string","String","lim","undefined","call","output","flags","ignoreCase","multiline","unicode","sticky","lastLastIndex","separatorCopy","source","match","lastIndex","lastLength","slice","index","apply","test","O","splitter","regexp","res","done","value","rx","S","C","unicodeMatching","p","q","A","z","e","i"],"mappings":"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","sourcesContent":["'use strict';\nvar fixRegExpWellKnownSymbolLogic = require('../internals/fix-regexp-well-known-symbol-logic');\nvar isRegExp = require('../internals/is-regexp');\nvar anObject = require('../internals/an-object');\nvar requireObjectCoercible = require('../internals/require-object-coercible');\nvar speciesConstructor = require('../internals/species-constructor');\nvar advanceStringIndex = require('../internals/advance-string-index');\nvar toLength = require('../internals/to-length');\nvar callRegExpExec = require('../internals/regexp-exec-abstract');\nvar regexpExec = require('../internals/regexp-exec');\nvar fails = require('../internals/fails');\n\nvar arrayPush = [].push;\nvar min = Math.min;\nvar MAX_UINT32 = 0xFFFFFFFF;\n\n// babel-minify transpiles RegExp('x', 'y') -> /x/y and it causes SyntaxError\nvar SUPPORTS_Y = !fails(function () { return !RegExp(MAX_UINT32, 'y'); });\n\n// @@split logic\nfixRegExpWellKnownSymbolLogic('split', 2, function (SPLIT, nativeSplit, maybeCallNative) {\n  var internalSplit;\n  if (\n    'abbc'.split(/(b)*/)[1] == 'c' ||\n    // eslint-disable-next-line regexp/no-empty-group -- required for testing\n    'test'.split(/(?:)/, -1).length != 4 ||\n    'ab'.split(/(?:ab)*/).length != 2 ||\n    '.'.split(/(.?)(.?)/).length != 4 ||\n    // eslint-disable-next-line regexp/no-assertion-capturing-group, regexp/no-empty-group -- required for testing\n    '.'.split(/()()/).length > 1 ||\n    ''.split(/.?/).length\n  ) {\n    // based on es5-shim implementation, need to rework it\n    internalSplit = function (separator, limit) {\n      var string = String(requireObjectCoercible(this));\n      var lim = limit === undefined ? MAX_UINT32 : limit >>> 0;\n      if (lim === 0) return [];\n      if (separator === undefined) return [string];\n      // If `separator` is not a regex, use native split\n      if (!isRegExp(separator)) {\n        return nativeSplit.call(string, separator, lim);\n      }\n      var output = [];\n      var flags = (separator.ignoreCase ? 'i' : '') +\n                  (separator.multiline ? 'm' : '') +\n                  (separator.unicode ? 'u' : '') +\n                  (separator.sticky ? 'y' : '');\n      var lastLastIndex = 0;\n      // Make `global` and avoid `lastIndex` issues by working with a copy\n      var separatorCopy = new RegExp(separator.source, flags + 'g');\n      var match, lastIndex, lastLength;\n      while (match = regexpExec.call(separatorCopy, string)) {\n        lastIndex = separatorCopy.lastIndex;\n        if (lastIndex > lastLastIndex) {\n          output.push(string.slice(lastLastIndex, match.index));\n          if (match.length > 1 && match.index < string.length) arrayPush.apply(output, match.slice(1));\n          lastLength = match[0].length;\n          lastLastIndex = lastIndex;\n          if (output.length >= lim) break;\n        }\n        if (separatorCopy.lastIndex === match.index) separatorCopy.lastIndex++; // Avoid an infinite loop\n      }\n      if (lastLastIndex === string.length) {\n        if (lastLength || !separatorCopy.test('')) output.push('');\n      } else output.push(string.slice(lastLastIndex));\n      return output.length > lim ? output.slice(0, lim) : output;\n    };\n  // Chakra, V8\n  } else if ('0'.split(undefined, 0).length) {\n    internalSplit = function (separator, limit) {\n      return separator === undefined && limit === 0 ? [] : nativeSplit.call(this, separator, limit);\n    };\n  } else internalSplit = nativeSplit;\n\n  return [\n    // `String.prototype.split` method\n    // https://tc39.es/ecma262/#sec-string.prototype.split\n    function split(separator, limit) {\n      var O = requireObjectCoercible(this);\n      var splitter = separator == undefined ? undefined : separator[SPLIT];\n      return splitter !== undefined\n        ? splitter.call(separator, O, limit)\n        : internalSplit.call(String(O), separator, limit);\n    },\n    // `RegExp.prototype[@@split]` method\n    // https://tc39.es/ecma262/#sec-regexp.prototype-@@split\n    //\n    // NOTE: This cannot be properly polyfilled in engines that don't support\n    // the 'y' flag.\n    function (regexp, limit) {\n      var res = maybeCallNative(internalSplit, regexp, this, limit, internalSplit !== nativeSplit);\n      if (res.done) return res.value;\n\n      var rx = anObject(regexp);\n      var S = String(this);\n      var C = speciesConstructor(rx, RegExp);\n\n      var unicodeMatching = rx.unicode;\n      var flags = (rx.ignoreCase ? 'i' : '') +\n                  (rx.multiline ? 'm' : '') +\n                  (rx.unicode ? 'u' : '') +\n                  (SUPPORTS_Y ? 'y' : 'g');\n\n      // ^(? + rx + ) is needed, in combination with some S slicing, to\n      // simulate the 'y' flag.\n      var splitter = new C(SUPPORTS_Y ? rx : '^(?:' + rx.source + ')', flags);\n      var lim = limit === undefined ? MAX_UINT32 : limit >>> 0;\n      if (lim === 0) return [];\n      if (S.length === 0) return callRegExpExec(splitter, S) === null ? [S] : [];\n      var p = 0;\n      var q = 0;\n      var A = [];\n      while (q < S.length) {\n        splitter.lastIndex = SUPPORTS_Y ? q : 0;\n        var z = callRegExpExec(splitter, SUPPORTS_Y ? S : S.slice(q));\n        var e;\n        if (\n          z === null ||\n          (e = min(toLength(splitter.lastIndex + (SUPPORTS_Y ? 0 : q)), S.length)) === p\n        ) {\n          q = advanceStringIndex(S, q, unicodeMatching);\n        } else {\n          A.push(S.slice(p, q));\n          if (A.length === lim) return A;\n          for (var i = 1; i <= z.length - 1; i++) {\n            A.push(z[i]);\n            if (A.length === lim) return A;\n          }\n          q = p = e;\n        }\n      }\n      A.push(S.slice(p));\n      return A;\n    }\n  ];\n}, !SUPPORTS_Y);\n"]}]}